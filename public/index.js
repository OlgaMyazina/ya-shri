!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=49)}({49:function(t,e,n){"use strict";n.r(e);let o={};const i={leftMin:-1e3,left:0,leftMax:820,zoomMin:100,zoom:100,zoomMax:300,brightnessMin:.2,brightness:1,brightnessMax:4};let r=null;function c(){document.querySelector(".camera").setAttribute("touch-action","none");const t=l();t.setAttribute("touch-action","none");const e=a();e.style.opacity="1";const n=(t.offsetWidth-e.offsetWidth)/2-20;e.style.left=`${n}px`,t&&function(t){t.addEventListener("pointerdown",s),t.addEventListener("pointermove",f),t.addEventListener("pointerup",p),t.addEventListener("pointercancel",p),t.addEventListener("pointerout",p),t.addEventListener("pointerleave",p),t.addEventListener("dblclick",g),t.addEventListener("dragstart",t=>{t.preventDefault()})}(t)}function l(){return document.querySelector(".cam")}function a(){return document.querySelector(".cam-slider")}function s(t){o[t.pointerId]=t,r||(r={startZoom:null,startDistance:null,startBrightness:null,startAngle:null,angleDiff:null,type:"move"})}const u=(t,e)=>{const{clientX:n,clientY:o}=t,{clientX:i,clientY:r}=e;return Math.sqrt(Math.pow(n-i,2)+Math.pow(o-r,2))},d=(t,e)=>{const{clientX:n,clientY:o}=t,{clientX:i,clientY:r}=e,c=Math.atan2(i-n,r-o);return 360-(180+Math.round(180*c/Math.PI))};document.querySelector(".feedback__unit_left"),document.querySelector(".feedback__unit_zoom"),document.querySelector(".feedback__unit_brightness");function f(t){const e=l(),n=Object.keys(o).length;if(0===n||!r)return;let c=0,s=0,f=0;if(1!==n||"move"!==r.type||o.fake){if(2===n){o[t.pointerId]=t;const n=Object.keys(o).map(t=>o[t]);n[0]&&n[1]&&(s=u(n[0],n[1]),f=d(n[0],n[1])),r.startDistance||(r.startZoom=i.zoom,r.startDistance=s,r.startBrightness=i.brightness,r.startAngle=f,r.angleDiff=0,r.type=null);const c=s-r.startDistance;let l=0;const a=10,p=8;if(r.startAngle&&(l=f-r.startAngle),!r.type){if(Math.abs(c)<a&&Math.abs(l)<p)return;Math.abs(c)>a?r.type="zoom":r.type="rotate"}if("zoom"===r.type){const{zoomMin:t,zoomMax:n}=i;let o=t;o=r.startZoom?r.startZoom+c:t+c,o=c<0?Math.max(o,t):Math.min(o,n),i.zoom=o,e.style.backgroundSize=`${o}%`}if("rotate"===r.type){const{brightnessMin:t,brightnessMax:n}=i;if(Math.abs(r.angleDiff?l-r.angleDiff:l)>n)return r.startBrightness=i.brightness,r.startAngle=f,void(r.angleDiff=t);const o=50;r.angleDiff=l;let c=0;r.startBrightness&&(c=r.startBrightness+l/o),c=l<0?Math.max(c,t):Math.min(c,n),i.brightness=c,e.style.filter=`brightness(${c})`}}}else{const n=o[t.pointerId];(function(t,e){const{leftMin:n,leftMax:o}=i,r=a(),c=((e.offsetWidth-r.offsetWidth)/2-20)/1e3;if(i.left+=t,i.left<n)i.left=n;else if(i.left>o)i.left=o;else if(r.style.left){const e=+r.style.left.slice(0,-2)-t*c;r.style.left=`${e}px`}e.style.backgroundPositionX=`${i.left}px`})(c=n?t.clientX-n.clientX:t.clientX,e),o[t.pointerId]=t}}function p(t){r=null,delete o[t.pointerId]}const m=document.querySelector(".fake-pointer");function g(t){if(o.fake)delete o.fake,m.style.left="0",m.style.top="0",m.classList.remove("active");else{o.fake=t;const e=m.offsetWidth;m.classList.add("active"),m.setAttribute("style",`left:${i.left+t.pageX-e/2}px; top: ${t.pageY-e/2}px`)}}function y(t){const e=document.querySelector(".content");e&&(t.forEach(t=>{const n=function(t){const e=document.querySelector(".template").content.cloneNode(!0);e.querySelector(".tile").classList.add(`${t.size}`),v(e,".type-tile","type",t.type),h(e,".title-tile",t.title),h(e,".source-tile",t.source),"critical"===t.type?b(e,".icon-tile",`url(img/${t.icon}-white.svg)`):b(e,".icon-tile",`url(img/${t.icon}.svg)`),h(e,".time-tile",t.time),t.description&&h(e,".description-tile",t.description);const n=t.data;if(n){const t=e.querySelector(".info-tile");if(t.classList.add("visable"),function(t){return void 0!==t.track}(n)){const t=document.querySelector(".template-audio").content.cloneNode(!0);!function(t,e){null!==t&&(b(t,".cover",`url("${e.albumcover}")`),h(t,".artist",`${e.artist}-${e.track.name}`),h(t,".length",e.track.length),v(t,".track","max",e.track.length),v(t,".track","value",`${e.track.length}/2`),v(t,".volume-range","value",e.volume.toString()),h(t,".volume",`${e.volume}%`))}(t,n);const o=e.querySelector(".data-tile");o.classList.add("data-audio"),o.appendChild(t)}if(function(t){return void 0!==t.type}(n)){const t=document.querySelector(".template-graph").content.cloneNode(!0);!function(t,e){if(null!==t){const e=t.querySelector(".graph");e.style.background=" url('../../img/Richdata.png') no-repeat",e.style.backgroundImage="-webkit-image-set( url('../../img/Richdata.png') 1x, url('../../img/Richdata@2x.png') 2x, url('../../images/Richdata@3x.png') 3x )",e.style.backgroundPosition="center bottom"}}(t);const n=e.querySelector(".data-tile");n.appendChild(t)}if(function(t){return void 0!==t.image}(n)){const t=document.querySelector(".template-image").content.cloneNode(!0),n=function(){const t=document.createElement("div");t.style.background="url('./img/Bitmap.png')",t.style.background="-webkit-image-set( url('../../img/Bitmap.png') 1x, url('../../img/Bitmap2x.png') 2x , url('img/Bitmap3x.png') 3x",t.style.backgroundPosition="50% 50%",t.classList.add("cam");const e=document.createElement("div");return e.classList.add("cam-slider"),t.appendChild(e),t}(),o=function(){const t=document.createElement("div");t.classList.add("control-labels");const e=document.createElement("div");e.classList.add("control-zoom");const n=document.createElement("div");return n.classList.add("control-bright"),e.innerText="Приближение: 78%",n.innerText="Яркость: 50%",t.appendChild(e),t.appendChild(n),t}();t.appendChild(n);const i=e.querySelector(".data-tile");i.classList.add("camera"),i.appendChild(t),i.appendChild(o)}if(function(t){return void 0!==t.buttons}(n)){const t=document.querySelector(".template-buttons").content.cloneNode(!0);n.buttons.forEach(e=>{const n=function(t){const e=document.createElement("div");return e.classList.add("data-button"),e.innerText=t,e}(e),o=t.querySelector(".buttons");o&&o.appendChild(n)});const o=e.querySelector(".data-tile");o.appendChild(t)}}return e}(t);e.appendChild(n)}),c())}function h(t,e,n){const o=t.querySelector(e);return o&&(o.innerText=n),o}function b(t,e,n){const o=t.querySelector(e);o&&(o.style.backgroundImage=n)}function v(t,e,n,o){const i=t.querySelector(e);i&&i.setAttribute(n,o)}fetch("data/events.json").then(t=>t.json()).then(t=>y(t.events))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,